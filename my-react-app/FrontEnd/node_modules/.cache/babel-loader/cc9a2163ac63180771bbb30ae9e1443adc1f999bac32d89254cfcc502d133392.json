{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tonge\\\\RateMyPre\\\\my-react-app\\\\FrontEnd\\\\src\\\\components\\\\Login\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './login.css';\n\n// Username Regex: 4-24 characters, starts with a letter, allows letters, numbers, underscores, hyphens\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\n\n// Password Regex: 8-24 characters, at least one lowercase letter, one uppercase letter, one digit, one special character\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%]).{8,24}$/;\nconst LoginForm = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n\n  // Username State\n  const [user, setUser] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n\n  // Password State\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n\n  // Error Message State\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  // Focus on username input on component mount\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  // Validate Username\n  useEffect(() => {\n    const isValid = USER_REGEX.test(user);\n    setValidName(isValid);\n  }, [user]);\n\n  // Validate Password\n  useEffect(() => {\n    const isValid = PWD_REGEX.test(pwd);\n    setValidPwd(isValid);\n  }, [pwd]);\n\n  // Clear error message when user modifies input\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Final validation before submission\n    const isValidName = USER_REGEX.test(user);\n    const isValidPwd = PWD_REGEX.test(pwd);\n    if (!isValidName || !isValidPwd) {\n      setErrMsg(\"Invalid Entry\");\n      return;\n    }\n    try {\n      // Replace the following with your login logic (e.g., API call)\n      // Example:\n      // const response = await axios.post('/login', { username: user, password: pwd });\n      // if (response.status === 200) {\n      //     setSuccess(true);\n      // }\n\n      // For demonstration, we'll assume login is successful\n      setSuccess(true);\n    } catch (error) {\n      setErrMsg(\"Login Failed\");\n      errRef.current.focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: success ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login Successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You are now logged in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"Header2\",\n        htmlFor: \"username\",\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCheck,\n          className: validName ? \"valid\" : \"hide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes,\n          className: validName || !user ? \"hide\" : \"invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        id: \"username\",\n        type: \"text\",\n        ref: userRef,\n        autoComplete: \"off\",\n        onChange: e => setUser(e.target.value),\n        value: user,\n        required: true,\n        \"aria-invalid\": validName ? \"false\" : \"true\",\n        \"aria-describedby\": \"uidnote\",\n        onFocus: () => setUserFocus(true),\n        onBlur: () => setUserFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"uidnote\",\n        className: userFocus && user && !validName ? \"instructions\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), \"4 to 24 characters. Must begin with a letter. Letters, numbers, underscores, hyphens allowed.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"Header2\",\n        htmlFor: \"password\",\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCheck,\n          className: validPwd ? \"valid\" : \"hide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes,\n          className: validPwd || !pwd ? \"hide\" : \"invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        id: \"password\",\n        type: \"password\",\n        onChange: e => setPwd(e.target.value),\n        value: pwd,\n        required: true,\n        \"aria-invalid\": validPwd ? \"false\" : \"true\",\n        \"aria-describedby\": \"pwdnote\",\n        onFocus: () => setPwdFocus(true),\n        onBlur: () => setPwdFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"pwdnote\",\n        className: pwdFocus && !validPwd ? \"instructions\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), \"8 to 24 characters. Must include uppercase and lowercase letters, a number, and a special character.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        disabled: !validName || !validPwd,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"AfL39+hlIwQsH+LywsxLfmhrrjc=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","jsxDEV","_jsxDEV","USER_REGEX","PWD_REGEX","LoginForm","_s","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","errMsg","setErrMsg","success","setSuccess","current","focus","isValid","test","handleSubmit","e","preventDefault","isValidName","isValidPwd","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","className","htmlFor","icon","id","type","autoComplete","onChange","target","value","required","onFocus","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/tonge/RateMyPre/my-react-app/FrontEnd/src/components/Login/LoginForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './login.css';\r\n\r\n// Username Regex: 4-24 characters, starts with a letter, allows letters, numbers, underscores, hyphens\r\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\r\n\r\n// Password Regex: 8-24 characters, at least one lowercase letter, one uppercase letter, one digit, one special character\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%]).{8,24}$/;\r\n\r\nconst LoginForm = () => {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    // Username State\r\n    const [user, setUser] = useState('');\r\n    const [validName, setValidName] = useState(false);\r\n    const [userFocus, setUserFocus] = useState(false);\r\n\r\n    // Password State\r\n    const [pwd, setPwd] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false);\r\n    const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n    // Error Message State\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    // Focus on username input on component mount\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, []);\r\n\r\n    // Validate Username\r\n    useEffect(() => {\r\n        const isValid = USER_REGEX.test(user);\r\n        setValidName(isValid);\r\n    }, [user]);\r\n\r\n    // Validate Password\r\n    useEffect(() => {\r\n        const isValid = PWD_REGEX.test(pwd);\r\n        setValidPwd(isValid);\r\n    }, [pwd]);\r\n\r\n    // Clear error message when user modifies input\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // Final validation before submission\r\n        const isValidName = USER_REGEX.test(user);\r\n        const isValidPwd = PWD_REGEX.test(pwd);\r\n        if (!isValidName || !isValidPwd) {\r\n            setErrMsg(\"Invalid Entry\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Replace the following with your login logic (e.g., API call)\r\n            // Example:\r\n            // const response = await axios.post('/login', { username: user, password: pwd });\r\n            // if (response.status === 200) {\r\n            //     setSuccess(true);\r\n            // }\r\n\r\n            // For demonstration, we'll assume login is successful\r\n            setSuccess(true);\r\n        } catch (error) {\r\n            setErrMsg(\"Login Failed\");\r\n            errRef.current.focus();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            {success ? (\r\n                <div>\r\n                    <h1>Login Successful!</h1>\r\n                    <p>You are now logged in.</p>\r\n                </div>\r\n            ) : (\r\n                <form onSubmit={handleSubmit}>\r\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">\r\n                        {errMsg}\r\n                    </p>\r\n                    \r\n                    {/* Username Field */}\r\n                    <label className=\"Header2\" htmlFor=\"username\">\r\n                        Username:\r\n                        <FontAwesomeIcon icon={faCheck} className={validName ? \"valid\" : \"hide\"} />\r\n                        <FontAwesomeIcon icon={faTimes} className={validName || !user ? \"hide\" : \"invalid\"} />\r\n                    </label>\r\n                    <input\r\n                        className=\"form-input\"\r\n                        id=\"username\"\r\n                        type=\"text\"\r\n                        ref={userRef}\r\n                        autoComplete=\"off\"\r\n                        onChange={(e) => setUser(e.target.value)}\r\n                        value={user}\r\n                        required\r\n                        aria-invalid={validName ? \"false\" : \"true\"}\r\n                        aria-describedby=\"uidnote\"\r\n                        onFocus={() => setUserFocus(true)}\r\n                        onBlur={() => setUserFocus(false)}\r\n                    />\r\n                    <p id=\"uidnote\" className={userFocus && user && !validName ? \"instructions\" : \"offscreen\"}>\r\n                        <FontAwesomeIcon icon={faInfoCircle} />\r\n                        4 to 24 characters. Must begin with a letter. Letters, numbers, underscores, hyphens allowed.\r\n                    </p>\r\n\r\n                    {/* Password Field */}\r\n                    <label className=\"Header2\" htmlFor=\"password\">\r\n                        Password:\r\n                        <FontAwesomeIcon icon={faCheck} className={validPwd ? \"valid\" : \"hide\"} />\r\n                        <FontAwesomeIcon icon={faTimes} className={validPwd || !pwd ? \"hide\" : \"invalid\"} />\r\n                    </label>\r\n                    <input\r\n                        className=\"form-input\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        onChange={(e) => setPwd(e.target.value)}\r\n                        value={pwd}\r\n                        required\r\n                        aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                        aria-describedby=\"pwdnote\"\r\n                        onFocus={() => setPwdFocus(true)}\r\n                        onBlur={() => setPwdFocus(false)}\r\n                    />\r\n                    <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n                        <FontAwesomeIcon icon={faInfoCircle} />\r\n                        8 to 24 characters. Must include uppercase and lowercase letters, a number, and a special character.\r\n                    </p>\r\n\r\n                    {/* Submit Button */}\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"submit-button\"\r\n                        disabled={!validName || !validPwd}\r\n                    >\r\n                        Sign In\r\n                    </button>\r\n                </form>\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}